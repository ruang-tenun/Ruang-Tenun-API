generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  category_id Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String?    @db.Text
  products    products[]
}

model ecommercelinks {
  link_id        Int       @id @default(autoincrement())
  product_id     Int?
  ecommerce_name String    @db.VarChar(255)
  link_url       String    @db.VarChar(255)
  products       products? @relation(fields: [product_id], references: [product_id], onDelete: Cascade, map: "ecommercelinks_ibfk_1")

  @@index([product_id], map: "ecommercelinks_ibfk_1")
}

model favorites {
  favorite_id  Int       @id @default(autoincrement())
  user_id      Int?
  product_id   Int?
  favorited_at DateTime? @default(now()) @db.Timestamp(0)
  users        users?    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "favorites_ibfk_1")
  products     products? @relation(fields: [product_id], references: [product_id], onDelete: Cascade, map: "favorites_ibfk_2")

  @@index([user_id], map: "favorites_ibfk_1")
  @@index([product_id], map: "favorites_ibfk_2")
}

model products {
  product_id     Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  description    String?          @db.Text
  price          Decimal          @db.Decimal(10, 2)
  category_id    Int?
  seller_id      Int?
  image_url      String?          @db.VarChar(255)
  created_at     DateTime?        @default(now()) @db.Timestamp(0)
  updated_at     DateTime?        @default(now()) @db.Timestamp(0)
  ecommercelinks ecommercelinks[]
  favorites      favorites[]
  categories     categories?      @relation(fields: [category_id], references: [category_id], onDelete: Cascade, map: "products_ibfk_1")
  sellers        sellers?         @relation(fields: [seller_id], references: [seller_id], onDelete: Cascade, map: "products_ibfk_2")

  @@index([category_id], map: "products_ibfk_1")
  @@index([seller_id], map: "products_ibfk_2")
}

model sellers {
  seller_id  Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  email      String     @unique(map: "email") @db.VarChar(255)
  password   String     @db.VarChar(255)
  phone      String?    @db.VarChar(20)
  address    String?    @db.Text
  created_at DateTime?  @default(now()) @db.Timestamp(0)
  updated_at DateTime?  @default(now()) @db.Timestamp(0)
  products   products[]
}

model users {
  user_id    Int         @id @default(autoincrement())
  username   String      @unique(map: "username") @db.VarChar(255)
  email      String      @unique(map: "email") @db.VarChar(255)
  password   String?     @db.VarChar(255)
  phone      String?     @db.VarChar(14)
  address    String?     @db.VarChar(255)
  created_at DateTime?   @default(now()) @db.Timestamp(0)
  updated_at DateTime?   @default(now()) @db.Timestamp(0)
  favorites  favorites[]
}
